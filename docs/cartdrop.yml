openapi: 3.0.3
info:
  title: CARTDROP - OpenAPI 3.0
  description: |-
    Cartdrop Open API

    Some useful links:
    - [Cartdrop repository](https://github.com/gmrzone/cartdrop-api-new)
    - [Cartdrop Frontend repository](https://github.com/gmrzone/cartdrop)
  contact:
    email: saiyedafzalgz@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
tags:
  - name: Category
    description: All endpoints related to categories
    externalDocs:
      description: Source Code
      url: 'https://github.com/gmrzone/cartdrop-api-new/tree/main/src/controllers/categories'
  - name: Subcategory
    description: All endpoints related to subcategories
    externalDocs:
      description: Source Code
      url: 'https://github.com/gmrzone/cartdrop-api-new/tree/main/src/controllers/subcategories'
paths:
  /categories:
    get:
      tags:
        - Category
      summary: Get list of categories
      description: Get list of categories
      operationId: getCategories
      responses:
        '200':
          description: Sucess Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

        '500':
          description: Internal Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /subcategories:
    get:
      tags:
        - Subcategory
      summary: Get list of subcategories
      description: Get list of subcategories
      operationId: getSubcategories
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
        '500':
          description: Internal Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /subcategories/{category}:
    get:
      tags:
        - Subcategory
      summary: Get subcategories for specific category
      description: Get subcategories for specific category
      operationId: getSubcategoriesForCategory
      parameters:
        - name: category
          in: path
          description: category slug
          required: true
          schema:
            type: string
            enum:
              [
                'mobiles',
                'electronics',
                'accessories',
                'fashion',
                'appliances',
                'groceries',
                'books',
              ]
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
        '404':
          description: 404 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '500':
          description: 404 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /subcategories/offers:
    get:
      tags:
        - Subcategory
      summary: Get list for subcategories with offer coupons available
      description: Get list for subcategories with offer coupons available
      operationId: getSubcategoriesWithCoupons
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcategoryWithCoupons'
        '500':
          description: 404 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        uuid:
          type: string
        created:
          type: string
        category_images:
          type: array
          items:
            type: object
            properties:
              image:
                type: string
    Subcategory:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        uuid:
          type: string
        created:
          type: string
        category_images:
          type: array
          items:
            type: object
            properties:
              image:
                type: string
    SubcategoryWithCoupons:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        uuid:
          type: string
        created:
          type: string
        coupons:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              discount:
                type: integer
                example: 10
        category_images:
          type: array
          items:
            type: object
            properties:
              image:
                type: string

    Error500:
      type: object
      properties:
        currentDate:
          type: string
        message:
          type: string
        statusCode:
          type: integer
          example: 500
    Error404:
      type: object
      properties:
        currentDate:
          type: string
        message:
          type: string
        statusCode:
          type: integer
          example: 404

  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
