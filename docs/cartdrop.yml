openapi: 3.0.3
info:
  title: CARTDROP - OpenAPI 3.0
  description: |-
    Cartdrop Open API

    Some useful links:
    - [Cartdrop repository](https://github.com/gmrzone/cartdrop-api-new)
    - [Cartdrop Frontend repository](https://github.com/gmrzone/cartdrop)
  contact:
    email: saiyedafzalgz@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
tags:
  - name: Categories
    description: All endpoints related to categories
    externalDocs:
      description: Source Code
      url: 'https://github.com/gmrzone/cartdrop-api-new/tree/main/src/controllers/categories'
  - name: Subcategories
    description: All endpoints related to subcategories
    externalDocs:
      description: Source Code
      url: 'https://github.com/gmrzone/cartdrop-api-new/tree/main/src/controllers/subcategories'
  - name: Brands
    description: All endpoints elated to brands
    externalDocs:
      description: Source Code
      url: 'https://github.com/gmrzone/cartdrop-api-new/tree/main/src/controllers/brands'
  - name: Users
    description: All endpoints related to users
    externalDocs:
      description: Source Code
      url: 'https://github.com/gmrzone/cartdrop-api-new/tree/main/src/controllers/users'
paths:
  /categories:
    get:
      tags:
        - Categories
      summary: Get list of categories
      description: Get list of categories
      operationId: getCategories
      responses:
        '200':
          description: Sucess Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

        '500':
          description: Internal Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '429':
          description: Rate Limit Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'

  /subcategories:
    get:
      tags:
        - Subcategories
      summary: Get list of subcategories
      description: Get list of subcategories
      operationId: getSubcategories
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
        '500':
          description: Internal Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '429':
          description: Rate Limit Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'
  /subcategories/{category}:
    get:
      tags:
        - Subcategories
      summary: Get subcategories for specific category
      description: Get subcategories for specific category
      operationId: getSubcategoriesForCategory
      parameters:
        - name: category
          in: path
          description: category slug
          required: true
          schema:
            type: string
            enum:
              [
                'mobiles',
                'electronics',
                'accessories',
                'fashion',
                'appliances',
                'groceries',
                'books',
              ]
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
        '404':
          description: Not Found Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '500':
          description: Internal Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '429':
          description: Rate Limit Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'
  /subcategories/offers:
    get:
      tags:
        - Subcategories
      summary: Get list for subcategories with offer coupons available
      description: Get list for subcategories with offer coupons available
      operationId: getSubcategoriesWithCoupons
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubcategoryWithCoupons'
        '500':
          description: Internal Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

        '429':
          description: Rate Limit Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'
  /brands:
    get:
      tags:
        - Brands
      summary: Get List of Brands with Cursor based Pagination
      description: Get List of Brands with Cursor based Pagination
      operationId: getBrands
      parameters:
        - name: pageSize
          in: query
          description: pagination page size
          required: false
          schema:
            type: number
            default:
        - name: cursor
          in: query
          description: pagination cursor
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brands'
        '500':
          description: 404 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

        '429':
          description: Rate Limit Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'
  /users/signup:
    post:
      tags:
        - Users
      summary: User Signup by providing all the params
      description: User Signup by providing all the params
      operationId: signUp
      requestBody:
        description: request body can be json or url encoded form
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBodyResponse'
          application/json:
            schema:
              $ref: '#/components/schemas/UserBodyResponse'

      responses:
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '409':
          description: Duplicate Resource Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
        '500':
          description: Internal Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '429':
          description: Rate Limit Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error429'

components:
  schemas:
    UserBodyResponse:
      type: object
      properties:
        username:
          type: string
          example: afzalsaiyed123
        email:
          type: string
          example: saiyedafzalgz@gmail.com
        number:
          type: string
          example: 7856954123
        password:
          type: string
          example: password
        confirmPassword:
          type: string
          example: confirmPassword
        firstName:
          type: string
          example: afzal
        lastName:
          type: string
          example: saiyed
      required:
        - username
        - email
        - password
        - confirmPassword
        - firstName
        - lastName
    Category:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        uuid:
          type: string
        created:
          type: string
        category_images:
          type: array
          items:
            type: object
            properties:
              image:
                type: string
    Subcategory:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        uuid:
          type: string
        created:
          type: string
        category_images:
          type: array
          items:
            type: object
            properties:
              image:
                type: string
    SubcategoryWithCoupons:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        uuid:
          type: string
        created:
          type: string
        coupons:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              discount:
                type: integer
                example: 10
        category_images:
          type: array
          items:
            type: object
            properties:
              image:
                type: string
    Brands:
      type: object
      properties:
        previousPage:
          type: string
        nextPage:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              uuid:
                type: string
                example: eb90362c-8e9d-4812-9a17-daaa7a85de04
              name:
                type: string
              photo:
                type: string
              placeholder:
                type: string

    Error500:
      type: object
      properties:
        code:
          type: string
          example: INTERNAL_ERROR
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 500
        currentDate:
          type: string
        errors:
          type: string
    Error404:
      type: object
      properties:
        code:
          type: string
          example: NOT_FOUND
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 404
        currentDate:
          type: string
        errors:
          type: string
    Error429:
      type: object
      properties:
        code:
          type: string
          example: LIMIT_ERROR
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 429
        currentDate:
          type: string
        errors:
          type: string
    Error400:
      type: object
      properties:
        code:
          type: string
          example: VALIDATION_ERROR
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 400
        currentDate:
          type: string
        errors:
          type: array
          items:
            type: string
    Error409:
      type: object
      properties:
        code:
          type: string
          example: 123456
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 409
        currentDate:
          type: string
        errors:
          type: string

  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
